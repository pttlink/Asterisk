POGSAG paging support for app_rpt and associated stuff   09/20/2013


FSK Digital data transmission is sometimes used in a 2-way (or rather
1-way, perhaps) radio environment. One such usage is for POCSAG paging.

In order to successfuly accomplish modulation for direct digital FSK of
a radio transmitter (the type often found in a 2-way radio environemnt),
it must be capable of DIRECT (unfiltered) modulation. Only certain radios
are truly capable of this (such as the Motorola Maxtrac, Radius, etc),
and, of course a number of base station that were designed to do this
in the first place.

Given the unique (at least to app_rpt) characteristics of this type of
transmision, it would be impossible to just implement a "generic" paging
method that "just works" will all app_rpt channel types (being that some
of them aren't even capable of generating audio that is suitable for
"direct modulation", such as chan_simpleusb and chan_beagle).

Therefore, it was determined that POCSAG paging would be implemented on
an individual case-by-case basis in each channel driver (in which it
makes "sense" to implement).

There is some "base" (common) code in app_rpt, which basically sends
"page request" to the associated channel driver, which "takes care of the
rest". App_rpt interacts with it, and "does the right thing" by witholding
any ID transmission until *after* any paging is done, so that the digital
paging would not be interrupted.

For this initial trial, chan_simpleusb was chosen to be the "guinea pig".
It is one of the channel drivers that, previously, had no way of driving
a "direct modulation" input of a transmitter. 

Since the USB device (URI or otherwise) has 2 outputs (being a stereo audio
device), one output can be designated for "normal" audio (and be connected
the "usual" way, to an input that then processed the audio within the
transmitter, and one output can be connected to a "direct modulation" input
for paging purposes. The driver can be configured to only provide output
to one of these at a time, so that during normal operation, audio will only
be present on the "normal" output, and that during paging operation, audio
will only be present on the "paging/direct modulation" output. These outputs
can be designated in the configuration of the channel driver (simpleusb.conf).


Chan_voter supports direct modulation mode(s), so implementation was straightforward.
The only "user-noticible addition" is the "baud" parameter in voter.conf.

Support of chan_usbradio is planned for the very near future, and, like chan_voter should
be somewhat easier then chan_simpleusb, since these channel drivers support direct moduation.


HOW TO IMPLEMENT:

rpt.conf:

cop 65 is the only way to generate a POCSAG page, currently.

987=cop,65,123456,AThis is a test
987=cop,65,123456,N5678
987=cop,65,123456,T

where "123456" is the capcode of the POCSAG pager you wish to page

simpleusb.conf:

For example, to make pager audio on left channel and 
normal program audio on right channel:

pager=a

For example, to make pager audio on right channel and 
normal program audio on left channel:

pager=b

also, it defaults to 1200 baud, you can also:

baud=512

or 

baud=2400
