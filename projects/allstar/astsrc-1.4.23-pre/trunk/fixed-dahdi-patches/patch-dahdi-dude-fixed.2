--- a/linux/drivers/dahdi/dahdi-base.c	2014-03-23 16:26:48.000000000 -0400
+++ b/linux/drivers/dahdi/dahdi-base.c	2014-03-25 13:53:33.000000000 -0400
@@ -982,8 +982,8 @@
 	unsigned long flags;
 
 	/* return if no valid conf number */
-	if (x <= 0)
-		return;
+        if ((x <= 0) || (x >= DAHDI_MAX_CONF))
+                return;
 
 	/* Return if there is no alias */
 	if (!confalias[x])
@@ -1358,6 +1358,7 @@
 	int res;
 	unsigned long flags;
 
+	if (is_pseudo_chan(chan)) return 0;
 	spin_lock_irqsave(&chan->lock, flags);
 	if (chan->ec_factory != &hwec_factory)
 		res = -ENODEV;
@@ -1384,6 +1385,7 @@
  */
 static void dahdi_disable_hw_preechocan(struct dahdi_chan *chan)
 {
+	if (is_pseudo_chan(chan)) return;
 	if (chan->span->ops->disable_hw_preechocan)
 		chan->span->ops->disable_hw_preechocan(chan);
 }
@@ -2998,7 +3000,7 @@
 #endif
 }
 
-static unsigned int max_pseudo_channels = 512;
+static unsigned int max_pseudo_channels = 2500;
 static unsigned int num_pseudo_channels;
 
 static struct dahdi_chan *dahdi_alloc_pseudo(struct file *file)
@@ -7080,6 +7082,28 @@
 			   {
 				  /* if to talk on conf */
 				if (ms->confmode & DAHDI_CONF_TALKER) {
+#ifndef	OLD_BROKEN_CODE
+					/* Store temp value */
+					memcpy(k, getlin, DAHDI_CHUNKSIZE * sizeof(short));
+					/* Add conf value */
+					ACSS(k, conf_sums_next[ms->_confn]);
+					/* save last one */
+					memcpy(ms->conflast2, ms->conflast1, DAHDI_CHUNKSIZE * sizeof(short));
+					memcpy(ms->conflast1, k, DAHDI_CHUNKSIZE * sizeof(short));
+					/*  get amount actually added */
+					SCSS(ms->conflast1, conf_sums_next[ms->_confn]);
+					/* Really add in new value */
+					ACSS(conf_sums_next[ms->_confn], ms->conflast1);
+					/* add in stuff from pseudo-receive, too */
+					ACSS(getlin,ms->putlin_pseudo);
+					memcpy(ms->getlin, getlin, DAHDI_CHUNKSIZE * sizeof(short));
+				} else {
+					memset(ms->conflast1, 0, DAHDI_CHUNKSIZE * sizeof(short));
+					memset(ms->conflast2, 0, DAHDI_CHUNKSIZE * sizeof(short));
+					memset(getlin, 0, DAHDI_CHUNKSIZE * sizeof(short));
+				}
+#else
+#error	DONT USE THIS, ITS BROKEN
 					/* Store temp value */
 					memcpy(k, getlin, DAHDI_CHUNKSIZE * sizeof(short));
 					/* Add conf value */
@@ -7094,6 +7118,7 @@
 					memset(ms->conflast, 0, DAHDI_CHUNKSIZE * sizeof(short));
 					memcpy(getlin, ms->getlin, DAHDI_CHUNKSIZE * sizeof(short));
 				}
+#endif
 				txb[0] = DAHDI_LIN2X(0, ms);
 				memset(txb + 1, txb[0], DAHDI_CHUNKSIZE - 1);
 				break;
@@ -8018,7 +8043,12 @@
 	}
 	for (x=0;x<DAHDI_CHUNKSIZE;x++) {
 		rxb[x] = ms->rxgain[rxb[x]];
+#ifndef	OLD_BROKEN_CODE
+		putlin[x] = ms->putlin_pseudo[x] = DAHDI_XLAW(rxb[x], ms);
+#else
+#error DONT USE THIS, ITS BROKEN
 		putlin[x] = DAHDI_XLAW(rxb[x], ms);
+#endif
 	}
 
 #ifndef CONFIG_DAHDI_NO_ECHOCAN_DISABLE
@@ -8188,9 +8218,28 @@
 		case DAHDI_CONF_CONF:	/* Normal conference mode */
 			if (is_pseudo_chan(ms)) /* if a pseudo-channel */
 			   {
+#ifndef	OLD_BROKEN_CODE
+				if (ms->confmode & DAHDI_CONF_TALKER) {
+					/* Store temp value */
+					memcpy(k, putlin, DAHDI_CHUNKSIZE * sizeof(short));
+					/* Add conf value */
+					ACSS(k, conf_sums_next[ms->_confn]);
+					/*  get amount actually added */
+					memcpy(ms->conflast, k, DAHDI_CHUNKSIZE * sizeof(short));
+					SCSS(ms->conflast, conf_sums_next[ms->_confn]);
+					/* Really add in new value */
+					ACSS(conf_sums_next[ms->_confn], ms->conflast);
+				} else memset(ms->conflast, 0, DAHDI_CHUNKSIZE * sizeof(short));
+#endif
+
 				if (ms->confmode & DAHDI_CONF_LISTENER) {
 					/* Subtract out last sample written to conf */
+#ifndef	OLD_BROKEN_CODE
+					SCSS(putlin, ms->conflast2);
+#else
+#error DONT USE THIS, ITS BROKEN
 					SCSS(putlin, ms->conflast);
+#endif
 					/* Add in conference */
 					ACSS(putlin, conf_sums[ms->_confn]);
 				}
@@ -8264,7 +8313,12 @@
 	int oldbuf;
 	int eof=0;
 	int abort=0;
+#ifndef	OLD_BROKEN_CODE
+	int res = 0;
+#else
+#error DONT USE THIS, ITS BROKEN
 	int res;
+#endif
 	int left, x;
 
 	while(bytes) {
